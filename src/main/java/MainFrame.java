/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Skyline
 */
public class MainFrame extends javax.swing.JFrame {

    private DefaultTableModel md;
    private FigureArray arr;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        arr = new FigureArray();
        this.DeljLabel.setVisible(false);
        this.DeljTextField.setVisible(false);
        this.deljButton.setVisible(false);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        DeljLabel = new javax.swing.JLabel();
        DeljTextField = new javax.swing.JTextField();
        deljButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        EditjMenu = new javax.swing.JMenu();
        AddjMenuItem = new javax.swing.JMenuItem();
        DeletejMenuItem = new javax.swing.JMenuItem();
        DeletejMenu = new javax.swing.JMenu();
        SortjMenu = new javax.swing.JMenu();
        SortBySquarejMenu = new javax.swing.JMenu();
        SortByMaxSjMenuItem = new javax.swing.JMenuItem();
        SortByMinSMenuItem = new javax.swing.JMenuItem();
        SortByPerimeterjMenu = new javax.swing.JMenu();
        SortByMaxPjMenuItem = new javax.swing.JMenuItem();
        SortByMinPjMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Список фигур");
        setBackground(javax.swing.UIManager.getDefaults().getColor("Button.hoverBorderColor"));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        setResizable(false);

        jTable.setBackground(new java.awt.Color(204, 204, 204));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Тип фигуры", "Цвет", "Данные фигуры", "Периметр", "Площадь"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setToolTipText("");
        jTable.setFocusTraversalPolicyProvider(true);
        jTable.setGridColor(new java.awt.Color(204, 204, 204));
        jTable.setName(""); // NOI18N
        jTable.setPreferredSize(new java.awt.Dimension(300, 200));
        jTable.setShowGrid(true);
        jTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setResizable(false);
            jTable.getColumnModel().getColumn(1).setResizable(false);
            jTable.getColumnModel().getColumn(2).setResizable(false);
            jTable.getColumnModel().getColumn(2).setPreferredWidth(300);
            jTable.getColumnModel().getColumn(3).setResizable(false);
            jTable.getColumnModel().getColumn(4).setResizable(false);
        }

        DeljLabel.setText("Выберите строку, которую хотите удалить:");

        deljButton.setText("Удалить");
        deljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deljButtonActionPerformed(evt);
            }
        });

        jMenuBar1.setName(""); // NOI18N

        EditjMenu.setText("Редактирование");

        AddjMenuItem.setText("Добавить");
        AddjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddjMenuItemActionPerformed(evt);
            }
        });
        EditjMenu.add(AddjMenuItem);

        DeletejMenuItem.setText("Удалить");
        DeletejMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletejMenuItemActionPerformed(evt);
            }
        });
        EditjMenu.add(DeletejMenuItem);

        jMenuBar1.add(EditjMenu);
        jMenuBar1.add(DeletejMenu);

        SortjMenu.setText("Сортировка");

        SortBySquarejMenu.setText("По площади");

        SortByMaxSjMenuItem.setText("По возрастанию");
        SortByMaxSjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMaxSjMenuItemActionPerformed(evt);
            }
        });
        SortBySquarejMenu.add(SortByMaxSjMenuItem);

        SortByMinSMenuItem.setText("По убыванию");
        SortByMinSMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMinSMenuItemActionPerformed(evt);
            }
        });
        SortBySquarejMenu.add(SortByMinSMenuItem);

        SortjMenu.add(SortBySquarejMenu);

        SortByPerimeterjMenu.setText("По периметру");

        SortByMaxPjMenuItem.setText("По возрастанию");
        SortByMaxPjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMaxPjMenuItemActionPerformed(evt);
            }
        });
        SortByPerimeterjMenu.add(SortByMaxPjMenuItem);

        SortByMinPjMenuItem.setText("По убыванию");
        SortByMinPjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMinPjMenuItemActionPerformed(evt);
            }
        });
        SortByPerimeterjMenu.add(SortByMinPjMenuItem);

        SortjMenu.add(SortByPerimeterjMenu);

        jMenuBar1.add(SortjMenu);

        setJMenuBar(jMenuBar1);
        jMenuBar1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(DeljLabel)
                        .addGap(50, 50, 50)
                        .addComponent(DeljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deljButton)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeljLabel)
                    .addComponent(DeljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deljButton))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddjMenuItemActionPerformed
        AddForm f = new AddForm();
        f.setVisible(true);
        f.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                if(Buff.buffer != null)
                {
                    arr.Add(Buff.buffer);
                    UpdateTable();
                    Buff.buffer=null;
                }
            }
        });          
    }//GEN-LAST:event_AddjMenuItemActionPerformed

    private void deljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deljButtonActionPerformed
        int ind = Integer.parseInt(this.DeljTextField.getText())-1;
        try
        {
            arr.Delete(ind);
            UpdateTable();
            this.DeljLabel.setVisible(false);
            this.DeljTextField.setVisible(false);
            this.DeljTextField.setText("");
            this.deljButton.setVisible(false);
        }
        catch(Exception e)
        {
            this.DeljTextField.setText("");
        }
    }//GEN-LAST:event_deljButtonActionPerformed

    private void SortByMaxSjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMaxSjMenuItemActionPerformed
        arr.SortByMaxSquare();
        UpdateTable();
    }//GEN-LAST:event_SortByMaxSjMenuItemActionPerformed

    private void SortByMinSMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMinSMenuItemActionPerformed
        arr.SortByMinSquare();
        UpdateTable();
    }//GEN-LAST:event_SortByMinSMenuItemActionPerformed

    private void SortByMaxPjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMaxPjMenuItemActionPerformed
        arr.SortByMaxPerimeter();
        UpdateTable();
    }//GEN-LAST:event_SortByMaxPjMenuItemActionPerformed

    private void SortByMinPjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMinPjMenuItemActionPerformed
        arr.SortByMinPerimeter();
        UpdateTable();
    }//GEN-LAST:event_SortByMinPjMenuItemActionPerformed

    private void DeletejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletejMenuItemActionPerformed
        if(arr.GetSize()>0)
        {
            this.DeljLabel.setVisible(true);
            this.DeljTextField.setVisible(true);
            this.deljButton.setVisible(true);
        }
    }//GEN-LAST:event_DeletejMenuItemActionPerformed

    private void UpdateTable()
    {
        md = (DefaultTableModel)jTable.getModel();
        String type, color, description;
        Double P,S;
        Figure f;
        for(int i=0; i<md.getRowCount(); i++)
            md.removeRow(0);
        for(int i=0; i<arr.GetSize(); i++)
        {
            f = arr.GetElement(i);
            type = FigureArray.GetType(f);
            color = f.GetColor();
            description = f.toString();
            P = f.CalcPerimeter();
            S = f.CalcSquare();
            md.addRow(new Object[] {type, color, description, P, S});
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddjMenuItem;
    private javax.swing.JMenu DeletejMenu;
    private javax.swing.JMenuItem DeletejMenuItem;
    private javax.swing.JLabel DeljLabel;
    private javax.swing.JTextField DeljTextField;
    private javax.swing.JMenu EditjMenu;
    private javax.swing.JMenuItem SortByMaxPjMenuItem;
    private javax.swing.JMenuItem SortByMaxSjMenuItem;
    private javax.swing.JMenuItem SortByMinPjMenuItem;
    private javax.swing.JMenuItem SortByMinSMenuItem;
    private javax.swing.JMenu SortByPerimeterjMenu;
    private javax.swing.JMenu SortBySquarejMenu;
    private javax.swing.JMenu SortjMenu;
    private javax.swing.JButton deljButton;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
