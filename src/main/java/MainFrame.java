/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.Color;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Skyline
 */
public class MainFrame extends javax.swing.JFrame {

    private DefaultTableModel md;
    private FigureArray arr;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        arr = new FigureArray();
        this.DeljLabel.setVisible(false);
        this.DeljTextField.setVisible(false);
        this.deljButton.setVisible(false);
        getContentPane().setBackground(new Color(102,149,200));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        DeljLabel = new javax.swing.JLabel();
        DeljTextField = new javax.swing.JTextField();
        deljButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        FilejMenu = new javax.swing.JMenu();
        OpenFileMenuItem = new javax.swing.JMenuItem();
        SaveFilejMenuItem = new javax.swing.JMenuItem();
        EditjMenu = new javax.swing.JMenu();
        AddjMenuItem = new javax.swing.JMenuItem();
        DeletejMenuItem = new javax.swing.JMenuItem();
        DeletejMenu = new javax.swing.JMenu();
        SortjMenu = new javax.swing.JMenu();
        SortBySquarejMenu = new javax.swing.JMenu();
        SortByMaxSjMenuItem = new javax.swing.JMenuItem();
        SortByMinSMenuItem = new javax.swing.JMenuItem();
        SortByPerimeterjMenu = new javax.swing.JMenu();
        SortByMaxPjMenuItem = new javax.swing.JMenuItem();
        SortByMinPjMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Список фигур");
        setBackground(new java.awt.Color(102, 149, 200));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        setResizable(false);

        DeljLabel.setText("Выберите строку, которую хотите удалить:");

        deljButton.setText("Удалить");
        deljButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deljButtonActionPerformed(evt);
            }
        });

        jTable.setBackground(java.awt.SystemColor.activeCaption);
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Тип фигуры", "Цвет", "Данные фигуры", "Периметр", "Площадь"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setGridColor(java.awt.SystemColor.activeCaption);
        jScrollPane2.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(2).setMinWidth(300);
        }

        jMenuBar1.setName(""); // NOI18N

        FilejMenu.setText("Файл");

        OpenFileMenuItem.setText("Открыть");
        OpenFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileMenuItemActionPerformed(evt);
            }
        });
        FilejMenu.add(OpenFileMenuItem);

        SaveFilejMenuItem.setText("Сохранить");
        SaveFilejMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFilejMenuItemActionPerformed(evt);
            }
        });
        FilejMenu.add(SaveFilejMenuItem);

        jMenuBar1.add(FilejMenu);

        EditjMenu.setText("Редактирование");

        AddjMenuItem.setText("Добавить");
        AddjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddjMenuItemActionPerformed(evt);
            }
        });
        EditjMenu.add(AddjMenuItem);

        DeletejMenuItem.setText("Удалить");
        DeletejMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeletejMenuItemActionPerformed(evt);
            }
        });
        EditjMenu.add(DeletejMenuItem);

        jMenuBar1.add(EditjMenu);
        jMenuBar1.add(DeletejMenu);

        SortjMenu.setText("Сортировка");

        SortBySquarejMenu.setText("По площади");

        SortByMaxSjMenuItem.setText("По возрастанию");
        SortByMaxSjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMaxSjMenuItemActionPerformed(evt);
            }
        });
        SortBySquarejMenu.add(SortByMaxSjMenuItem);

        SortByMinSMenuItem.setText("По убыванию");
        SortByMinSMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMinSMenuItemActionPerformed(evt);
            }
        });
        SortBySquarejMenu.add(SortByMinSMenuItem);

        SortjMenu.add(SortBySquarejMenu);

        SortByPerimeterjMenu.setText("По периметру");

        SortByMaxPjMenuItem.setText("По возрастанию");
        SortByMaxPjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMaxPjMenuItemActionPerformed(evt);
            }
        });
        SortByPerimeterjMenu.add(SortByMaxPjMenuItem);

        SortByMinPjMenuItem.setText("По убыванию");
        SortByMinPjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByMinPjMenuItemActionPerformed(evt);
            }
        });
        SortByPerimeterjMenu.add(SortByMinPjMenuItem);

        SortjMenu.add(SortByPerimeterjMenu);

        jMenuBar1.add(SortjMenu);

        setJMenuBar(jMenuBar1);
        jMenuBar1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(DeljLabel)
                        .addGap(50, 50, 50)
                        .addComponent(DeljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deljButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 763, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeljLabel)
                    .addComponent(DeljTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deljButton))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddjMenuItemActionPerformed
        AddForm f = new AddForm();
        f.setVisible(true);
        f.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                if(Buff.buffer != null)
                {
                    arr.Add(Buff.buffer);
                    UpdateTable();
                    Buff.buffer=null;
                }
            }
        });          
    }//GEN-LAST:event_AddjMenuItemActionPerformed

    private void deljButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deljButtonActionPerformed
        int ind = Integer.parseInt(this.DeljTextField.getText())-1;
        try
        {
            arr.Delete(ind);
            UpdateTable();
            this.DeljLabel.setVisible(false);
            this.DeljTextField.setVisible(false);
            this.DeljTextField.setText("");
            this.deljButton.setVisible(false);
        }
        catch(Exception e)
        {
            this.DeljTextField.setText("");
        }
    }//GEN-LAST:event_deljButtonActionPerformed

    private void SortByMaxSjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMaxSjMenuItemActionPerformed
        arr.SortByMaxSquare();
        UpdateTable();
    }//GEN-LAST:event_SortByMaxSjMenuItemActionPerformed

    private void SortByMinSMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMinSMenuItemActionPerformed
        arr.SortByMinSquare();
        UpdateTable();
    }//GEN-LAST:event_SortByMinSMenuItemActionPerformed

    private void SortByMaxPjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMaxPjMenuItemActionPerformed
        arr.SortByMaxPerimeter();
        UpdateTable();
    }//GEN-LAST:event_SortByMaxPjMenuItemActionPerformed

    private void SortByMinPjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByMinPjMenuItemActionPerformed
        arr.SortByMinPerimeter();
        UpdateTable();
    }//GEN-LAST:event_SortByMinPjMenuItemActionPerformed

    private void DeletejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeletejMenuItemActionPerformed
        if(arr.GetSize()>0)
        {
            this.DeljLabel.setVisible(true);
            this.DeljTextField.setVisible(true);
            this.deljButton.setVisible(true);
        }
    }//GEN-LAST:event_DeletejMenuItemActionPerformed

    private void OpenFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileMenuItemActionPerformed
        JFileChooser opener = new JFileChooser("C:\\Users/ivanr/Desktop");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".bin", "bin");
        opener.setFileFilter(filter);
        opener.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if(opener.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
        String filename = opener.getSelectedFile().getPath();
        FileInputStream fis;
        ObjectInputStream ois;
        try
        {
            fis = new FileInputStream(filename);
            ois = new ObjectInputStream(fis);
            arr = (FigureArray)ois.readObject();
            UpdateTable();
        }
        catch(IOException | ClassNotFoundException ex)
        {
        }
        }
    }//GEN-LAST:event_OpenFileMenuItemActionPerformed

    private void SaveFilejMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFilejMenuItemActionPerformed
        JFileChooser saver = new JFileChooser("C:\\Users/ivanr/Desktop");
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".bin", "bin");
        saver.setFileFilter(filter);
        saver.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if(saver.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
        String filename = saver.getSelectedFile().getPath();
        FileOutputStream fos;
        ObjectOutputStream oos;
        try
        {
            fos = new FileOutputStream(filename);
            oos = new ObjectOutputStream(fos);
            oos.writeObject(arr);
            oos.flush();
            oos.close();
        }
        catch(FileNotFoundException e)
        {
        } 
        catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_SaveFilejMenuItemActionPerformed

    private void UpdateTable()
    {
        md = (DefaultTableModel)jTable.getModel();
        String type, color, description;
        Double P,S;
        Figure f;
        for(int i=0; i< md.getRowCount(); i++)
            md.removeRow(0);
        for(int i=0; i<arr.GetSize(); i++)
        {
            f = arr.GetElement(i);
            type = FigureArray.GetType(f);
            color = f.GetColor();
            description = f.toString();
            P = f.CalcPerimeter();
            S = f.CalcSquare();
            md.addRow(new Object[] {type, color, description, P, S});
        }
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AddjMenuItem;
    private javax.swing.JMenu DeletejMenu;
    private javax.swing.JMenuItem DeletejMenuItem;
    private javax.swing.JLabel DeljLabel;
    private javax.swing.JTextField DeljTextField;
    private javax.swing.JMenu EditjMenu;
    private javax.swing.JMenu FilejMenu;
    private javax.swing.JMenuItem OpenFileMenuItem;
    private javax.swing.JMenuItem SaveFilejMenuItem;
    private javax.swing.JMenuItem SortByMaxPjMenuItem;
    private javax.swing.JMenuItem SortByMaxSjMenuItem;
    private javax.swing.JMenuItem SortByMinPjMenuItem;
    private javax.swing.JMenuItem SortByMinSMenuItem;
    private javax.swing.JMenu SortByPerimeterjMenu;
    private javax.swing.JMenu SortBySquarejMenu;
    private javax.swing.JMenu SortjMenu;
    private javax.swing.JButton deljButton;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
